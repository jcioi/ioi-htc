# -*- mode: ruby -*-
# vi: set ft=ruby :
REV_DOMAINS = %w(
  10
)
DOMAIN = "aws.ioi18.net"
REGIONS = %w(
  ap-northeast-1
)

template "ioi18.net-public" do
end

template "ioi18.net-private" do
  rrset "s3-apne1.ioi18.net.", "CNAME" do
    ttl 60
    resource_records "internal-rproxy-s3-184145372.ap-northeast-1.elb.amazonaws.com."
  end

  rrset "cache.s3-apne1.ioi18.net.", "CNAME" do
    set_identifier 'cache-s3-001'
    weight 10
    ttl 5
    resource_records "cache-s3-001.apne1.aws.ioi18.net."
  end


  rrset "fproxy.ioi18.net.", "CNAME" do
    set_identifier 'fproxy-001'
    weight 10
    ttl 5
    resource_records "fproxy-001.apne1.aws.ioi18.net."
  end
end

template "ioi18.net-common" do
  rrset "ioi18.net.", "CAA" do
    ttl 300
    resource_records(
      *%w(
        letsencrypt.org
        amazon.com
        amazontrust.com
        awstrust.com
        amazonaws.com
      ).map do |cn|
        "0 issue \"#{cn}\""
      end,
      *%w(
        letsencrypt.org
        amazon.com
        amazontrust.com
        awstrust.com
        amazonaws.com
      ).map do |cn|
        "0 issuewild \"#{cn}\""
      end,
    )
  end


  rrset "bastion.ioi18.net", "A" do
    ttl 60
    resource_records "18.179.132.187"
  end

  rrset "cms-dev-public.elb.ioi18.net.", "CNAME" do
    ttl 60
    resource_records "cms-dev-public-766146013.ap-northeast-1.elb.amazonaws.com."
  end

  rrset "contest-dev.ioi18.net.", "CNAME" do
    ttl 60
    resource_records "cms-dev-public.elb.ioi18.net."
  end
  rrset "admin-dev.ioi18.net.", "CNAME" do
    ttl 60
    resource_records "cms-dev-public.elb.ioi18.net."
  end


  %w(
    _631443614a51aeef30597369338b45d4.s3-apne1.ioi18.net. _2a11a85cc8ea57ad9cdc4241c6e80af8.acm-validations.aws.

    _d4f78db4c298fbc45330f0d1c9d9e849.contest-dev.ioi18.net. _1633bd98cb4163a5da11c64f521fc4cc.acm-validations.aws.
    _28e7c50a7da8abdeb4b9052a496131ba.admin-dev.ioi18.net. _1752cbcca843adf936a314d7a06c9cf6.acm-validations.aws.

    _49b0d8867958cbdf4bf0a1b5bb05ca9d.contest-prd.ioi18.net. _f444da3c7f19c069578a5df4e5346bb5.acm-validations.aws.
    _f84c971670274fed5f5b5f6eacf93831.contest.ioi18.net. _0eb88c8671bd02fc410223b9e0245112.acm-validations.aws.
    _2d4786213b2decc5137acde13908983b.practice.ioi18.net. _3d2be546d8e02ce302f22c67fc66b1dc.acm-validations.aws.

    _53f69bc3666681b7273a15de51c34421.admin-prd.ioi18.net. _b2d4ec0466de36a82bc79d0e5da1192c.acm-validations.aws.
    _0b2e01274f08027e8ee3e190a6611dd2.admin.ioi18.net. _a1bbc20246715abc577dccf3e4a18473.acm-validations.aws.
  ).each_slice(2) do |(name,target)|
    rrset name, "CNAME" do
      ttl 60
      resource_records target
    end
  end


end



##
require 'aws-sdk-ec2'
def fetch_instances()
  REGIONS.map do |region|
    ec2 = Aws::EC2::Resource.new(region: region)

    vpcs = ec2.vpcs.map do |vpc|
      tag = vpc.tags.find { |_| _.key == 'Name' }
      next unless tag

      vpc_name = tag.value
      vpc_domain = "#{vpc_name}.#{DOMAIN}"

      instances = vpc.instances.map do |instance|
        name_tag = instance.tags.find { |_| _.key == "Name" }
        alias_tag = instance.tags.find { |_| _.key == "Alias" }

        name_from_ip = instance.private_dns_name.split('.').first
        raise if name_from_ip.empty?

        if name_tag && !name_tag.value.empty?
          next if name_tag.value.size > 62
          name = name_tag.value.gsub(?_,?-)
          next unless /\A[A-Za-z0-9-]+\z/ === name
        else
          name = name_from_ip
        end

        alias_name = alias_tag && alias_tag.value.gsub(?_,?-)

        alias_name_from_ip = unless name_from_ip == name
                               name_from_ip
                             end

        [
          name,
          name: name,
          alias: alias_name,
          alias_from_ip: alias_name_from_ip,
          ip: instance.private_ip_address,
          fqdn: "#{name}.#{vpc_domain}.",
          alias_fqdn: (alias_name && !alias_name.empty?) ? "#{alias_name}.#{vpc_domain}." : nil,
          alias_fqdn_from_ip: alias_name_from_ip && "#{alias_name_from_ip}.#{vpc_domain}.",
          alias_fqdn_from_instance_id: "#{instance.instance_id}.#{vpc_domain}.",
          ptr_fqdn: "#{instance.private_ip_address.split(?.).reverse.join(?.)}.in-addr.arpa.",
        ]
      end.compact.to_h

      [vpc_name, name: vpc_name, instances: instances, id: vpc.id]
    end.compact.to_h

    [region, vpcs]
  end.to_h
end

region_vpc_instances = fetch_instances()

template "ioi18.net-aws_instances" do
  region_vpc_instances.each do |region, vpcs|
    instances_by_alias = Hash.new {|h, k| h[k] = [] }

    vpcs.each do |short_name, vpc_obj|
      vpc_obj[:instances].each do |name, instance|
        rrset instance[:fqdn], "A" do
          ttl 60
          resource_records instance[:ip]
        end

        if instance[:alias]
          instances_by_alias[instance[:alias_fqdn]] << instance
        end

        if instance[:alias_fqdn_from_ip]
          rrset instance[:alias_fqdn_from_ip], "CNAME" do
            ttl 60
            resource_records instance[:fqdn]
          end
        end

        rrset instance[:alias_fqdn_from_instance_id], "CNAME" do
          ttl 60
          resource_records instance[:fqdn]
        end
      end
    end

    instances_by_alias.each do |alias_fqdn, instances|
      if instances.size == 1
        rrset alias_fqdn, "CNAME" do
          ttl 60
          resource_records instances.first[:fqdn]
        end
      else
        rrset alias_fqdn, "A" do
          ttl 60
          resource_records(*instances.map {|i| i[:ip] })
        end
      end
    end
  end


end

###

REV_DOMAINS.each do |network|
  rev_domain = "#{network.split(?.).reverse.join(?.)}.in-addr.arpa."
  hosted_zone rev_domain do
    region_vpc_instances.each do |region, vpcs|
      vpcs.each do |short_name, _|
        vpc region, _[:id]
      end
    end

    region_vpc_instances.each do |region, vpcs|
      vpcs.each do |short_name, vpc_obj|
        vpc_obj[:instances].each do |name, instance|
          next unless instance[:ip].start_with?("#{network}.")

          rrset instance[:ptr_fqdn], "PTR" do
            ttl 60
            resource_records instance[:fqdn]
          end
        end
      end
    end
  end
end


hosted_zone "ioi18.net." do
  include_template 'ioi18.net-common'
  include_template 'ioi18.net-public'

end

hosted_zone "ioi18.net.", "Z1V30A252QIS0J" do
  vpc "ap-northeast-1", "vpc-03eed691a6a5a03b2"
  include_template 'ioi18.net-common'
  include_template 'ioi18.net-private'
  include_template 'ioi18.net-aws_instances'
end


